<section class="login flex justify-center py-24">
    <div class="w-full max-w-2xl">
        <div class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
            <div class="flex flex-col items-center justify-center">
                <img
                  title="Click to change photo."
                  id="profile-img"
                  src="/images/profiles/users/<%= user && user.image ? user.image : 'profile.png' %>"
                  alt="profile-img"
                  style="
                    cursor: pointer;
                    width: 250px;
                    height: 250px;
                    border-radius: 50%;
                    box-shadow: 0 0 10px 1px #ccc;
                  "
                />
                <div id="msg-section" class="text-red-500 text-sm my-6">
                  <%= messages.error %>
                </div>
              </div>
              <div id="overlay" style="display: none">
                <div
                  id="image-upload-panel"
                  class="w-full max-w-2xl rounded-md flex flex-col items-center justify-center"
                >
                  <label class="text-2xl font-bold">Upload Image</label>
                  <div
                    class="bg-gray-200 shadow-inner rounded-md w-full my-6 cursor-pointer"
                  >
                    <div
                      id="upload-container"
                      class="flex flex-col items-center w-full h-full"
                    >
                      <img
                        src="/img/upload-img.png"
                        alt="upload-img"
                        class="w-1/2 h-1/2 object-contain"
                      />
                      <label for="panelFileInput" class="mb-4 cursor-pointer">
                        Drag and drop an image or click here to select an image:
                        <input
                          type="file"
                          style="display: none"
                          id="panelFileInput"
                          accept="image/*"
                        />
                      </label>
                    </div>
                    <div
                      id="preview"
                      class="flex flex-col items-center w-full h-full"
                    ></div>
                  </div>
                  <div class="w-full flex justify-end">
                    <button
                      id="cancelBtn"
                      class="btn rounded-full text-white font-bold py-2 px-4 mx-3 rounded focus:outline-none focus:shadow-outline"
                      type="button"
                    >
                      Cancel
                    </button>
                    <button
                      id="confirmBtn"
                      class="btn rounded-full text-white font-bold py-2 px-4 mx-3 rounded focus:outline-none focus:shadow-outline"
                      type="button"
                    >
                      Confirm
                    </button>
                  </div>
                </div>
              </div>
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="username">
                    Name
                </label>
                <input value="<%= user.name  %>"
                    class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                    id="name" type="text" placeholder="Enter your name">
            </div>
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="username">
                    Age
                </label>
                <input value="<%= user.age  %>"
                    class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                    id="age" type="number" min="0" max="150" required placeholder="Enter your age" inputmode="numeric" style="-moz-appearance: textfield; -webkit-appearance: none; appearance: none;">
            </div>
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="username">
                    Email
                </label>
                <input value="<%= user.mail  %>"
                    class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                    id="mail" type="email" placeholder="Enter your email">
            </div>
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="username">
                    Mobile
                </label>
                <input value="<%= user.mobile  %>"
                    class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                    id="mobile" type="number" placeholder="Enter your Mobile number" required>
            </div>
            <div class="mb-6 flex items-center justify-center">
                <button
                id="update-profile-btn"
                    class="btn rounded-full text-white font-bold py-2 px-4 my-2 rounded focus:outline-none focus:shadow-outline">
                    Update Profile Info.
                </button>
            </div>
            <div id="get-password" class="flex hidden items-center justify-between">
                <div class="mb-6">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="password">
                        Old Password
                    </label>
                    <input name="password"
                        class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline"
                        id="old-password" type="password" placeholder="******************">
                </div>
                <div class="mb-6">
                    <label class="block text-gray-700 text-sm font-bold mb-2" for="password">
                        New Password
                    </label>
                    <input name="password"
                        class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline"
                        id="new-password" type="password" placeholder="******************">
                </div>
            </div>
            <div class="flex items-center justify-between">
                <a href="/logout">
                    <button
                        class="btn flex items-center justify-center rounded-full text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                        type="submit">
                        <img src="/img/exit.png" alt="logout" class="filter invert w-5 h-5 mr-2">
                        Log Out
                    </button>
                </a>
                <button
                id="change-password-btn"
                class="btn rounded-full text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                type="submit">
                Change Password
                </button>
                <button
                id="update-password-btn"
                class="btn rounded-full hidden text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                type="submit">
                Update Password
                </button>
            </div>
        </form>
    </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<!-- Include jQuery -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css"
/>
<script>
  // Get elements
  const profileImage = document.getElementById("profile-img");
  const panel = document.getElementById("image-upload-panel");
  const overlay = document.getElementById("overlay");
  const panelFileInput = document.getElementById("panelFileInput");
  const uploadContainer = document.getElementById("upload-container");
  const msgSection = document.getElementById("msg-section");
  const preview = document.getElementById("preview");
  let image_name = profileImage.src.split("/").pop();
  console.log("imgName ",image_name)
  let flag = false;
  let cropper;

    const name=document.getElementById("name")
    const age=document.getElementById("age")
    const mail=document.getElementById("mail")
    const mobile=document.getElementById("mobile")

    const updateProfile= document.getElementById("update-profile-btn")
    const updatePassword= document.getElementById("update-password-btn")
    const changePassword= document.getElementById("change-password-btn")
    const getPassword= document.getElementById("get-password")

    changePassword.addEventListener('click', ()=>{
        changePassword.classList.add("hidden")
        updatePassword.classList.remove("hidden")
        getPassword.classList.remove("hidden")
    })
    
    updatePassword.addEventListener('click', ()=>{
        const isConfirmed = confirm("Are you sure you want to change your password?");
        
        const oldPassword=document.getElementById('old-password').value.trim()
        const newPassword=document.getElementById('new-password').value.trim()
        if(isConfirmed){
            axios.patch("/myprofile",{
                oldPassword,
                newPassword
            }).then(()=>{
                changePassword.classList.remove("hidden")
                updatePassword.classList.add("hidden")
                getPassword.classList.add("hidden")
                msgSection.innerHTML="Password updated Successfully."
            }).catch((err)=>{
                msgSection.innerHTML="Something went wrong."
            })
        }
        else{
            document.getElementById('old-password').value='';
            document.getElementById('new-password').value='';
        }
    })
    
    updateProfile.addEventListener('click', ()=>{
        const isConfirmed = confirm("Are you sure you want to update your profile?");

        if (isConfirmed) {
            axios.patch("/myprofile",{
                image: image_name.trim(),
                name: name.value.trim(),
                age: age.value.trim(), 
                mail: mail.value.trim(), 
                mobile: mobile.value.trim(),
            }).then(()=>{
                window.location.reload();
            }).catch((err)=>{
                msgSection.innerHTML="Something went wrong."
            })
        }
    })


  // Show panel when productImage is clicked
  profileImage.addEventListener("click", function () {
    overlay.style.display = "block";
    uploadContainer.classList.remove("hidden");
    preview.classList.add("hidden");
  });

  uploadContainer.addEventListener("click", function () {
    document.getElementById("panelFileInput").click();
  });

  // Hide panel when clicking outside of it
  document.addEventListener("click", function (event) {
    if (!panel.contains(event.target) && !profileImage.contains(event.target)) {
      overlay.style.display = "none";
      panelFileInput.value = "";
      preview.innerHTML = "";
    }
  });

  // Handle file selection
  panelFileInput.addEventListener("change", function (event) {
    const file = event.target.files[0];
    if (file && file.size <= 500 * 1024) {
      const reader = new FileReader();
      reader.onload = function (e) {
        // const blob = new Blob([e.target.result], { type: file.type });
        const image = new Image();
        image.src = URL.createObjectURL(
          new Blob([e.target.result], { type: file.type })
        );
        image.onload = function () {
          cropper = new Cropper(image, {
            aspectRatio: 1 / 1, // Set the aspect ratio of the crop box
            viewMode: 2, // Set the view mode to restrict the size of the crop box
          });
        };
        uploadContainer.classList.add("hidden");
        preview.classList.remove("hidden");
        preview.appendChild(image);
      };
      reader.readAsArrayBuffer(file);
    } else {
      alert("Please select an image less than 500KB.");
      panelFileInput.value = "";
    }
  });

  // Prevent default behavior for drag-and-drop events
  document.addEventListener("dragover", function (e) {
    e.preventDefault();
  });
  document.addEventListener("drop", function (e) {
    e.preventDefault();
  });

  document.getElementById("confirmBtn").addEventListener("click", async function () {
      // Create an image element for the cropped image
      if (cropper && panelFileInput.value) {
        // Hide the cropper and show the cropped image
        overlay.style.display = "none";
        panelFileInput.value = "";
        preview.innerHTML = "";

        try {
          msgSection.innerHTML = ` Uploading... <span><progress id="progressBar" value="0" max="100"></progress></span> <span id="percentage">0 %</span><span id="uploadCancelBtn"><img src="/img/cross.png"></span>`;

          const progressBar = document.getElementById("progressBar");
          const percentageSpan = document.getElementById("percentage");
          const cancelBtn = document.getElementById("uploadCancelBtn");
          let uploadCancelToken = axios.CancelToken.source();

          updateProfile.classList.add("disabled");
          updateProfile.classList.remove("btn");
          updateProfile.disabled = true;

          cancelBtn.addEventListener("click", () => {
            uploadCancelToken.cancel("Upload canceled by user");
            msgSectioninnerHTML = "";
            throw new Error({ message: "Upload Cancelled." });
          });

          const blob = await new Promise((resolve, reject) => {
            cropper.getCroppedCanvas().toBlob((blob) => {
              resolve(blob);
            });
          });
          profileImage.src = await URL.createObjectURL(blob);

          // const imgBlob = profileImage.src;
          const formData = new FormData();
          formData.append("image", blob, image_name);

          const response = await axios.post(
            `/myprofile/upload-userProfile-img`,
            formData,
            {
              headers: {
                "Content-Type": "multipart/form-data",
              },
              // Configuring axios to listen to upload progress
              onUploadProgress: (progressEvent) => {
                const progress = Math.round(
                  (progressEvent.loaded / progressEvent.total) * 100
                );
                // Update the progress bar
                progressBar.value = progress;
                percentageSpan.innerText = `${progress} %`;
              },
              cancelToken: uploadCancelToken.token,
            }
          );
          console.log("image uploaded successfully.");
          image_name = response.data.image_name;
          flag = true;

          console.log("flag ",flag)
          console.log(image_name)

          // cropper.destroy();
          updateProfile.classList.remove("disabled");
          updateProfile.classList.add("btn");
          updateProfile.disabled = false;
          msgSection.innerHTML = "";
        } catch (error) {
          if (axios.isCancel(error)) {
            // Handle cancelation
            console.log("Upload canceled by user");
            // parse error message and show it in msg-section
            msgSection.innerHTML = error.message;
            updateProfile.classList.remove("disabled");
            updateProfile.classList.add("btn");
            updateProfile.disabled = false;
          } else {
            // Handle other errors
            console.error("Error:", error.message);
            // parse error message and show it in msg-section
            msgSection.innerHTML = "Failed to upload Image.";
            updateProfile.classList.remove("disabled");
            updateProfile.classList.add("btn");
            updateProfile.disabled = false;
          }
        }
      } else {
        alert("Please select a image.");
      }
    });

  document.getElementById("cancelBtn").addEventListener("click", () => {
    overlay.style.display = "none";
    panelFileInput.value = "";
    preview.innerHTML = "";
  });

</script>